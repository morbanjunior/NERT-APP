{"version":3,"sources":["component/Footer/Footer.jsx","constants/userConstants.jsx","actions/userActions.jsx","component/Header/Header.jsx","component/MainScreen.jsx","constants/noteConstants.jsx","actions/notesActions.jsx","component/Loading.jsx","component/ErrorMessage.jsx","screens/CreateNote/CreateNote.jsx","screens/LandingPages/LandingPage.jsx","screens/MyNotes/MyNotes.jsx","screens/LoginScreen/LoginScreen.jsx","screens/RegisterScreen/RegisterScreen.jsx","screens/SingleNote/SingleNote.jsx","screens/profileScreen/ProfileScreen.jsx","App.js","reportWebVitals.js","store.jsx","reducers/userReducers.jsx","reducers/notesReducers.jsx","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","Header","setSearch","history","useHistory","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","expand","variant","Brand","to","Toggle","Collapse","id","Nav","Form","FormControl","placeholder","onChange","e","target","value","Link","NavDropdown","title","Item","Divider","onClick","removeItem","push","MainScreen","children","NOTE_LIST_REQUEST","NOTE_LIST_SUCCESS","NOTE_LIST_FAIL","NOTE_CREATE_REQUEST","NOTE_CREATE_SUCCESS","NOTE_CREATE_FAIL","NOTE_UPDATE_REQUEST","NOTE_UPDATE_SUCCESS","NOTE_UPDATE_FAIL","NOTE_DELETE_REQUEST","NOTE_DELETE_SUCCESS","NOTE_DELETE_FAIL","deleteNoteAction","getState","Authorization","token","delete","Loading","size","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","CreateNote","useState","setTitle","content","setContent","category","setCategory","noteCreate","loading","error","resetHandler","note","Card","Body","onSubmit","preventDefault","creatNoteAction","Group","controlId","Label","Control","palaceholder","as","rows","Button","Date","toLocaleDateString","LandingPage","useEffect","getItem","MyNotes","search","noteList","notes","successCreate","success","successUpdate","noteUpdate","noteDelete","loadingDelete","errorDelete","successDelete","get","marginLeft","marginBottom","reverse","filter","filterdNote","toLowerCase","includes","map","Accordion","margin","color","textDecoration","flex","cursor","alignSelf","Text","eventKey","href","_id","window","confirm","Badge","createdAt","substring","LoginScreen","setEmail","setPassword","submitHandler","Value","RegisterScreen","setName","setPic","confirmpassword","setConfirmpassword","setMessagee","picMessage","setPicMessage","userRegister","File","pics","FormData","append","fetch","method","body","then","res","json","console","log","url","toString","catch","err","postDetails","files","label","custom","SingleNote","match","date","setDate","params","updatedAt","fetching","put","updateNoteAction","ProfileScreen","confirmPassword","setConfirmPassword","userUpdate","pushState","md","user","varient","src","alt","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b8de2f0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <footer style={{\r\n                width: \"100%\",\r\n                position: \"relative\",\r\n                bottom: 0,\r\n                display: \"flex\",\r\n                justifyContent: \"center\"\r\n            }}>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"text-center py-3\">Copyright &copy; Note Zipper</Col>\r\n                    </Row>\r\n                </Container>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const USER_LOGIN_REQUEST =\"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS =\"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL =\"USER_LOGIN_FAIL\"\r\nexport const USER_LOGOUT =\"USER_LOGOUT\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\"\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\"\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\"","import { USER_LOGIN_REQUEST, USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, \r\n         USER_LOGOUT, \r\n         USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\r\n         USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\r\nimport axios from \"axios\"\r\n\r\nexport const login =(email, password) => async (dispatch) =>{\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        const config ={\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/users/login\",\r\n            {\r\n                email,\r\n                password,\r\n            },\r\n            config\r\n        );\r\n        \r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout =() => async (dispatch) =>{\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({ type: USER_LOGOUT })\r\n}\r\n\r\n\r\nexport const register =(name, email, password, pic) => async (dispatch) =>{\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n        const config ={\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/users\",\r\n            {\r\n                name,\r\n                email,\r\n                password,\r\n                pic,\r\n\r\n            },\r\n            config\r\n        );\r\n        \r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data })\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: USER_UPDATE_REQUEST });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\"/api/users/profile\", user, config);\r\n  \r\n      dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n  \r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n  \r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n","import React from 'react';\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Container } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../../actions/userActions';\r\n\r\nconst Header = ({ setSearch }) => {\r\n   \r\n    const history=useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () =>{\r\n        dispatch(logout())\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Navbar bg=\"primary\" expand=\"lg\" variant='dark'>\r\n                <Container>\r\n                    <Navbar.Brand>\r\n                        <Link to='/'>Note Zipper</Link>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                    <Navbar.Collapse id=\"navbarScroll\">\r\n                        <Nav className='m-auto'>\r\n                            <Form className=\"d-flex\">\r\n                                <FormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"Search\"\r\n                                    className=\"mr-2\"\r\n                                    aria-label=\"Search\"\r\n                                    onChange={(e) =>setSearch(e.target.value)}\r\n                                />\r\n\r\n                            </Form>\r\n                        </Nav>\r\n                        {userInfo ? <Nav>\r\n                            <Nav.Link>\r\n                                <Link to='/mynotes'>My Notes</Link></Nav.Link>\r\n                            <NavDropdown title={userInfo?.name} id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item><Link to=\"/profile\">My Profile</Link></NavDropdown.Item>\r\n\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item onClick={logoutHandler}\r\n                                >Logout\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n\r\n                        </Nav>:<Nav>\r\n                            {\" \"}\r\n                            <Nav.Link>\r\n                                <Link to='/login'>Login</Link></Nav.Link></Nav>}\r\n\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport './MainScreen.css'\r\n\r\nconst MainScreen = ( {title, children}) => {\r\n    return (\r\n        <div className=\"mainback\">\r\n            <Container>\r\n                <Row>\r\n                    <div className=\"page\">\r\n                        {\r\n                            title && (\r\n                                <>\r\n                                <h1 className=\"heading\">{title}</h1>\r\n                                <hr/>\r\n                                </>\r\n                            )\r\n                        }\r\n\r\n                        {children}\r\n\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainScreen\r\n","//List Notes\r\nexport const NOTE_LIST_REQUEST = \"NOTE_LIST_REQUEST\"\r\nexport const NOTE_LIST_SUCCESS = \"NOTE_LIST_SUCCESS\"\r\nexport const NOTE_LIST_FAIL = \"NOTE_LIST_FAIL\"\r\n\r\n//Create Notes\r\nexport const NOTE_CREATE_REQUEST = \"NOTE_CREATE_REQUEST\"\r\nexport const NOTE_CREATE_SUCCESS = \"NOTE_CREATE_SUCCESS\"\r\nexport const NOTE_CREATE_FAIL = \"NOTE_CREATE_FAIL\"\r\n\r\n//Update Notes\r\nexport const NOTE_UPDATE_REQUEST = \"NOTE_UPDATE_REQUEST\"\r\nexport const NOTE_UPDATE_SUCCESS = \"NOTE_UPDATE_SUCCESS\"\r\nexport const NOTE_UPDATE_FAIL = \"NOTE_UPDATE_FAIL\"\r\n\r\n//Delete Notes\r\nexport const NOTE_DELETE_REQUEST = \"NOTE_DELETE_REQUEST\"\r\nexport const NOTE_DELETE_SUCCESS = \"NOTE_DELETE_SUCCESS\"\r\nexport const NOTE_DELETE_FAIL = \"NOTE_DELETE_FAIL\"","import axios from \"axios\"\r\nimport { NOTE_LIST_REQUEST, NOTE_LIST_SUCCESS, NOTE_LIST_FAIL,\r\n         NOTE_CREATE_REQUEST, NOTE_CREATE_SUCCESS, NOTE_CREATE_FAIL,\r\n         NOTE_UPDATE_REQUEST, NOTE_UPDATE_SUCCESS, NOTE_UPDATE_FAIL, \r\n         NOTE_DELETE_REQUEST, NOTE_DELETE_SUCCESS, NOTE_DELETE_FAIL,\r\n        } from '../constants/noteConstants'\r\n\r\nexport const listNotes = () => async (dispatch, getState) =>{\r\n    try {\r\n        dispatch({ \r\n            type: NOTE_LIST_REQUEST\r\n         })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n\r\n            },\r\n        }\r\n        \r\n        const { data } = await axios.get(`/api/notes`, config)\r\n\r\n        dispatch({ type: NOTE_LIST_SUCCESS, payload: data })\r\n\r\n       \r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n\r\n        dispatch({\r\n            type: NOTE_LIST_FAIL,\r\n            payload:message,\r\n        })\r\n       \r\n    }\r\n}\r\n\r\nexport const creatNoteAction = (title, content, category) => async (dispatch, getState) =>{\r\n    try {\r\n        dispatch({ \r\n            type: NOTE_CREATE_REQUEST,\r\n         })\r\n         \r\n         //For know whose is the user that is creating the note.\r\n        const {\r\n            userLogin: { userInfo },\r\n\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n\r\n            },\r\n        }\r\n        ////\r\n        \r\n        //post the data.\r\n        const { data } = await axios.post(\r\n            `/api/notes/create`,\r\n            { title, content, category },\r\n             config)\r\n\r\n        dispatch({ type: NOTE_CREATE_SUCCESS, payload: data })\r\n\r\n       \r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n\r\n        dispatch({\r\n            type: NOTE_CREATE_FAIL,\r\n            payload:message,\r\n        })\r\n       \r\n    }\r\n}\r\n\r\nexport const updateNoteAction = \r\n    (id, title, content, category) => async (dispatch, getState) =>{\r\n    try {\r\n        dispatch({ \r\n            type: NOTE_UPDATE_REQUEST,\r\n         })\r\n         \r\n         //For know whose is the user that is creating the note.\r\n        const {\r\n            userLogin: { userInfo },\r\n\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n\r\n            },\r\n        }\r\n        ////\r\n        \r\n        //post the data.\r\n        const { data } = await axios.put(\r\n            `/api/notes/${id}`,\r\n            { title, content, category },\r\n             config)\r\n\r\n        dispatch({ type: NOTE_UPDATE_SUCCESS, payload: data })\r\n\r\n       \r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n\r\n        dispatch({\r\n            type: NOTE_UPDATE_FAIL,\r\n            payload:message,\r\n        })\r\n       \r\n    }\r\n}\r\n\r\nexport const deleteNoteAction = \r\n    (id) => async (dispatch, getState) =>{\r\n    try {\r\n        dispatch({ \r\n            type: NOTE_DELETE_REQUEST,\r\n         })\r\n         \r\n         //For know whose is the user that is creating the note.\r\n        const {\r\n            userLogin: { userInfo },\r\n\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n\r\n            },\r\n        }\r\n        ////\r\n        \r\n        //post the data.\r\n        const { data } = await axios.delete(\r\n            `/api/notes/${id}`, config)\r\n\r\n        dispatch({ type: NOTE_DELETE_SUCCESS, payload: data })\r\n\r\n       \r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n\r\n        dispatch({\r\n            type: NOTE_DELETE_FAIL,\r\n            payload:message,\r\n        })\r\n       \r\n    }\r\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loading = ({size =100}) => {\r\n    return (\r\n        <div \r\n        style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        }}>\r\n            < Spinner \r\n            style={{\r\n                width: size,\r\n                height: size,\r\n            }}\r\n                animation=\"border\"\r\n\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst ErrorMessage = ({ variant = \"info\", children} ) => {\r\n    return (\r\n       <Alert variant={variant} style={{ fontSize: 20 }}>\r\n           <strong>{children}</strong>\r\n       </Alert>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import React, {useState } from 'react'\r\nimport MainScreen from '../../component/MainScreen'\r\nimport { Form, Button,  Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { creatNoteAction } from '../../actions/notesActions'\r\nimport Loading from '../../component/Loading'\r\nimport ErrorMessage from '../../component/ErrorMessage'\r\nimport ReactMarkdown from \"react-markdown\"\r\n\r\n\r\n\r\n\r\nfunction CreateNote ({ history }) {\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n    const [content, setContent] = useState(\"\")\r\n    const [category, setCategory] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n   const noteCreate = useSelector((state) => state.noteCreate)\r\n   const { loading, error, note } = noteCreate\r\n\r\n    \r\n\r\n    const resetHandler = () =>{\r\n        setTitle(\"\")\r\n        setContent(\"\")\r\n        setContent(\"\")\r\n    }\r\n  \r\n   \r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        if (!title || !content || !category) return;\r\n        dispatch(creatNoteAction(title, content, category))\r\n        \r\n\r\n        resetHandler()\r\n        history.push(\"/mynotes\")\r\n    }\r\n\r\n    return (\r\n        <MainScreen title=\"Create a Note\">\r\n            <Card>\r\n                <Card.Header>Create a new Note</Card.Header>\r\n                <Card.Body>\r\n                    <Form onSubmit={submitHandler}>\r\n                        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n                        <Form.Group controlId=\"title\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control \r\n                            type=\"text\"\r\n                            value={title}\r\n                            palaceholder=\"Enter the title\"\r\n                            onChange={(e)=> setTitle(e.target.value)}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"content\">\r\n                            <Form.Label>Content</Form.Label>\r\n                            <Form.Control \r\n                            as=\"textarea\"\r\n                            value={content}\r\n                            palaceholder=\"Enter the content\"\r\n                            rows={4}\r\n                            onChange={(e)=> setContent(e.target.value)}/>\r\n                        </Form.Group>\r\n                        {content && (\r\n                            <Card>\r\n                                <Card.Header>Note Preview</Card.Header>\r\n                                <Card.Body>\r\n                                    <ReactMarkdown>{content}</ReactMarkdown>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        )}\r\n\r\n                        <Form.Group controlId=\"content\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control \r\n                            type=\"content\"\r\n                            value={category}\r\n                            palaceholder=\"Enter the Category\"\r\n                            onChange={(e)=> setCategory(e.target.value)}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            {loading && <Loading size={50}/>}\r\n                            <Button type=\"submit\" variant=\"primary\">\r\n                                Create Note\r\n                            </Button>\r\n                            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\r\n                                Reset Filds\r\n                            </Button>\r\n                        </Form.Group>\r\n\r\n                    </Form>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\"> \r\n                    Create on - {new Date().toLocaleDateString()}\r\n                </Card.Footer>\r\n            </Card>\r\n        </MainScreen>\r\n    )\r\n}\r\n\r\nexport default CreateNote\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport { Button, Container, Row } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport './LandingPage.css';\r\n\r\nconst LandingPage = () => {\r\n\r\n       const history = useHistory()\r\n    useEffect(() => {\r\n        const userInfo = localStorage.getItem(\"userInfo\");\r\n        if (userInfo){\r\n            history.push(\"/mynotes\");\r\n        }\r\n     }, [history])\r\n     \r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Container>\r\n                <Row>\r\n                    <div className=\"intro-text\">\r\n                        <div>\r\n                            <h1 className='title'>Welcome to Note Zipper</h1>\r\n                            <p className=\"subtitle\"> One Safe Place For all your Notes.</p>\r\n                        </div>\r\n                        <div className='buttonContainer'>\r\n                            <Link to=\"/login\">\r\n                                <Button size='lg' className='landingbutton'>Login</Button>\r\n                            </Link>\r\n                            <Link to=\"/register\">\r\n                                <Button size='lg' className='landingbutton' variant='outline-primary'>Sign Up</Button>\r\n                            </Link>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </Row>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","\r\nimport React, {useEffect} from 'react'\r\nimport { Accordion, Badge, Button, Card } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport MainScreen from '../../component/MainScreen'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport { deleteNoteAction, listNotes } from '../../actions/notesActions'\r\nimport  Loading  from '../../component/Loading'\r\nimport ErrorMessage from '../../component/ErrorMessage'\r\n\r\n\r\n\r\n\r\nconst MyNotes = ({ search }) => {\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //for bring the accionts User\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    \r\n    \r\n    //for bring the accionts note\r\n    const noteList = useSelector((state )=> state.noteList)\r\n    const { loading, notes, error } = noteList\r\n\r\n    const noteCreate = useSelector((state) => state.noteCreate)\r\n   const { success: successCreate } = noteCreate\r\n\r\n   const noteUpdate = useSelector((state) => state.noteUpdate)\r\n   const { success:successUpdate } = noteUpdate\r\n\r\n   const noteDelete = useSelector((state) => state.noteDelete)\r\n   const { loading:loadingDelete, error:errorDelete, success:successDelete } = noteDelete\r\n\r\n    \r\n\r\n    //Delete notess \r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm(\"Are you sure?\")){\r\n            dispatch(deleteNoteAction(id))\r\n        }\r\n    }\r\n      const history = useHistory()\r\n\r\n///Funtion For get data\r\n    useEffect(() => {\r\n        const userInfo = localStorage.getItem(\"userInfo\");\r\n        if (userInfo){\r\n             //get the note\r\n        dispatch(listNotes())\r\n        }else{\r\n            history.push('/')\r\n        }\r\n       \r\n\r\n        //Push to home if the user is not login\r\n        \r\n\r\n    }, [dispatch, history, successCreate, userInfo, successUpdate, successDelete])\r\n    \r\n   \r\n///// end here. \r\n\r\n    return (\r\n        <div>\r\n           <MainScreen title={` Welcom Back ${userInfo?.name}..`}>\r\n               <Link to=\"/createnote\">\r\n                   <Button style={{ marginLeft:10, marginBottom: 6}} size=\"lg\">\r\n                       Create New Notes\r\n                   </Button>\r\n                </Link> \r\n                   {errorDelete && <ErrorMessage variant=\"danger\" >{errorDelete}</ErrorMessage>}\r\n                   {loadingDelete && <Loading/>}\r\n\r\n                   {error && <ErrorMessage variant=\"danger\" >{error}</ErrorMessage>}\r\n                   {loading && <Loading/>}\r\n                   {notes?.reverse()\r\n                   .filter((filterdNote) =>\r\n                        filterdNote.title.toLowerCase().includes(search.toLowerCase()))\r\n                   .map(note =>(\r\n                        <Accordion key={note._id}>\r\n                            <Card style={{ margin: 10 }}>\r\n                        <Card.Header style={{ display: \"flex\" }}>\r\n                           <span \r\n                           style={{\r\n                               color: \"black\",\r\n                               textDecoration: \"none\",\r\n                               flex: 1,\r\n                               cursor: \"pointer\",\r\n                               alignSelf: \"center\",\r\n                               fontSize: 18,\r\n                           }}\r\n                           >\r\n                               <Accordion.Toggle as={Card.Text} variant=\"link\" eventKey=\"0\">\r\n                                  {note.title}\r\n                               </Accordion.Toggle>\r\n                              </span> \r\n                           <div>\r\n                               <Button href={`/note/${note._id}`}>Edit</Button>\r\n                               <Button variant=\"danger\" className=\"mx-2\" onClick={()=>deleteHandler(note._id)}>Delete</Button>\r\n                           </div>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey=\"0\"> \r\n                        <Card.Body>\r\n                        <h4>\r\n                            <Badge variant=\"success\">Category - {note.category}</Badge>\r\n                        </h4>\r\n                        <div className=\"card-body\">\r\n                           <blockquote className=\"blockquote mb-0\">\r\n                            <p>{note.content}</p>\r\n                           <footer className=\"blockquote-footer\">\r\n                               Create on {\" \"}\r\n                               <cite title=\"Source Title\">{note.createdAt.substring(0,10)}</cite></footer>\r\n                           </blockquote>\r\n                        </div>\r\n\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                        \r\n                   </Card>\r\n                       \r\n                        </Accordion>\r\n                        ))\r\n                   }\r\n                  \r\n              \r\n            </MainScreen>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyNotes\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport MainScreen from '../../component/MainScreen'\r\nimport './LoginScreen.css'\r\n\r\nimport Loading from '../../component/Loading'\r\nimport ErrorMessage from '../../component/ErrorMessage'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../../actions/userActions'\r\n\r\nconst LoginScreen = ({history}) => {\r\n\r\n    const [email, setEmail ] = useState (\"\")\r\n    const [password, setPassword ] = useState (\"\")\r\n   \r\n    const dispatch = useDispatch()\r\n    \r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(\"/mynotes\")\r\n        }\r\n    }, [history, userInfo])\r\n    \r\n        //metode for validation Login\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <MainScreen title=\"LOGIN\">\r\n            <div className=\"loginContainer\">\r\n                \r\n                {loading && <Loading/>}\r\n                {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                        type=\"email\"\r\n                        Value={email}\r\n                        placeholder=\"Enter email\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                        type=\"password\"\r\n                        Value={password}\r\n                        placeholder=\"Enter email\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n                <Row className=\"py-3\">\r\n                    <Col>\r\n                      New Customer? <Link to=\"/register\">Register Here</Link>  \r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n\r\n        </MainScreen>\r\n           \r\n        \r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, {useState, useEffect } from 'react'\r\nimport { Form, Button, Row,Col } from 'react-bootstrap'\r\nimport ErrorMessage from '../../component/ErrorMessage'\r\nimport MainScreen from '../../component/MainScreen'\r\nimport './RegisterScreen.css'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport Loading from '../../component/Loading'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register } from '../../actions/userActions'\r\n\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [pic, setPic] = useState(\"https://icon-library.com/images/22215-dog.ico.ico\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmpassword, setConfirmpassword] = useState(\"\")\r\n    const [message, setMessagee] = useState(null)\r\n    const [picMessage, setPicMessage] = useState(null)\r\n    \r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const history = useHistory()\r\n    \r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(\"/mynotes\")\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    //Register Handler\r\n    const submitHandler = async (e) =>{\r\n        e.preventDefault()\r\n       \r\n        if(password !== confirmpassword){\r\n            setMessagee( 'Passwords do not match' )\r\n        }\r\n        else{\r\n            dispatch(register(name, email, password, pic))\r\n        }\r\n       \r\n    } \r\n\r\n        //updateFotos\r\n    const postDetails = (pics) =>{\r\n        if (!pics){\r\n            return setPicMessage(\"Please Select an Image\")\r\n        }\r\n         setPicMessage(null)\r\n\r\n         if(pics.type === 'image/jpeg' || pics.type === 'image/png'){\r\n             const data = new FormData()\r\n             data.append('file', pics)\r\n             data.append('upload_preset', 'notezipper')\r\n             data.append('cloud_name', 'exodiatec')\r\n             fetch(\"https://api.cloudinary.com/v1_1/exodiatec/image/upload\", {\r\n                 method: \"post\",\r\n                 body: data,\r\n             })\r\n             .then((res) => res.json())\r\n             .then((data) =>{\r\n                 console.log(data)\r\n                 setPic(data.url.toString())\r\n             })\r\n             .catch((err)=>{\r\n                 console.log(err)\r\n             })\r\n         } else{\r\n             return setPicMessage(\"Please Select an Image\")\r\n         }\r\n    }\r\n    \r\n    \r\n    return (\r\n        <MainScreen title=\"REGISTER\">\r\n            <div className=\"RegisterContainer\">\r\n                {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n                { message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n                {loading && <Loading/>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"name\"\r\n                        value={name}\r\n                        placeholder=\"Entre Name\"\r\n                        onChange={(e)=> setName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type=\"email\"\r\n                        value={email}\r\n                        placeholder=\"Entre Email Address\"\r\n                        onChange={(e)=> setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"FormBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\"\r\n                        value={password}\r\n                        placeholder=\"Entre Password\"\r\n                        onChange={(e)=> setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\"\r\n                         value={confirmpassword}\r\n                        placeholder=\"Confirm passwordd\"\r\n                        onChange={(e)=> setConfirmpassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    { picMessage && (\r\n                        <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n                    )}\r\n\r\n                    <Form.Group controlId=\"pic\">\r\n                        <Form.Label>Profile Pincture</Form.Label>\r\n                        <Form.File\r\n                            onChange={(e)=> postDetails(e.target.files[0])}                        \r\n                            id=\"custom-file\"\r\n                            type=\"image/png\"\r\n                            label=\"Upload Profile Picture\"\r\n                            custom\r\n                        \r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Register\r\n                    </Button>\r\n\r\n                </Form>\r\n\r\n                <Row className=\"py-3\">\r\n                    <Col>\r\n                      Have an Account? <Link to=\"/login\">Login</Link>  \r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n            </div>\r\n            </MainScreen>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, {useEffect, useState } from 'react'\r\nimport MainScreen from '../../component/MainScreen'\r\nimport { Form, Button,  Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateNoteAction, deleteNoteAction } from '../../actions/notesActions'\r\nimport Loading from '../../component/Loading'\r\nimport ErrorMessage from '../../component/ErrorMessage'\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport axios from 'axios'\r\n\r\n\r\nconst SingleNote = ({match, history}) => {\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n    const [content, setContent] = useState(\"\")\r\n    const [category, setCategory] = useState(\"\")\r\n    const [date, setDate] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n   const noteUpdate = useSelector((state) => state.noteUpdate)\r\n   const { loading, error } = noteUpdate\r\n\r\n   const noteDelete = useSelector((state) => state.noteDelete)\r\n   const { loading:loadingDelete, error:errorDelete, success:successDelete } = noteDelete\r\n\r\n    \r\n\r\n    //Delete notess \r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm(\"Are you sure?\")){\r\n            dispatch(deleteNoteAction(id))\r\n        }\r\n        history.push(\"/mynotes\")\r\n    }\r\n\r\n   useEffect(() => {\r\n       const fetching = async () =>{\r\n           const { data } = await axios.get(`/api/notes/${match.params.id}`)\r\n           \r\n           setTitle(data.title)\r\n           setContent(data.content)\r\n           setCategory(data.category)\r\n           setDate(data.updatedAt)\r\n       }\r\n\r\n       fetching()\r\n       \r\n   }, [match.params.id, date])\r\n\r\n   const resetHandler = () =>{\r\n    setTitle(\"\")\r\n    setContent(\"\")\r\n    setCategory(\"\")\r\n    \r\n   }\r\n\r\n   const updateHandler = (e) =>{\r\n    e.preventDefault()\r\n    dispatch(updateNoteAction(match.params.id, title, content, category))\r\n    if (!title || !content || !category) return;\r\n    \r\n\r\n    resetHandler()\r\n    history.push(\"/mynotes\")\r\n}\r\n   \r\n    return (\r\n        <MainScreen title=\"Edit Note\">\r\n        <Card>\r\n            <Card.Header>Edit a Note</Card.Header>\r\n            <Card.Body>\r\n                <Form onSubmit={updateHandler}>\r\n                {errorDelete && <ErrorMessage variant=\"danger\" >{errorDelete}</ErrorMessage>}\r\n                   {loadingDelete && <Loading/>}\r\n\r\n                    {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n                    <Form.Group controlId=\"title\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control \r\n                        type=\"text\"\r\n                        value={title}\r\n                        palaceholder=\"Enter the title\"\r\n                        onChange={(e)=> setTitle(e.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"content\">\r\n                        <Form.Label>Content</Form.Label>\r\n                        <Form.Control \r\n                        as=\"textarea\"\r\n                        value={content}\r\n                        palaceholder=\"Enter the content\"\r\n                        rows={4}\r\n                        onChange={(e)=> setContent(e.target.value)}/>\r\n                    </Form.Group>\r\n                    {content && (\r\n                        <Card>\r\n                            <Card.Header>Note Preview</Card.Header>\r\n                            <Card.Body>\r\n                                <ReactMarkdown>{content}</ReactMarkdown>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )}\r\n\r\n                    <Form.Group controlId=\"content\">\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control \r\n                        type=\"content\"\r\n                        value={category}\r\n                        palaceholder=\"Enter the Category\"\r\n                        onChange={(e)=> setCategory(e.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        {loading && <Loading size={50}/>}\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Update Note\r\n                        </Button>\r\n                        <Button className=\"mx-2\" variant=\" danger \" onClick={() => deleteHandler(match.params.id)} variant=\"danger\">\r\n                            Delete Note\r\n                        </Button>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\"> \r\n              Updated on - {date.substring(0, 10)}\r\n            </Card.Footer>\r\n        </Card>\r\n    </MainScreen>\r\n\r\n    )\r\n}\r\n\r\nexport default SingleNote\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Col, Row, Button, Form } from 'react-bootstrap'\r\nimport MainScreen from \"../../component/MainScreen\"\r\nimport ErrorMessage from '../../component/ErrorMessage'\r\nimport { useHistory } from 'react-router'\r\nimport { updateProfile } from '../../actions/userActions'\r\nimport Loading from '../../component/Loading'\r\n\r\nconst ProfileScreen = () => {\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [pic, setPic] = useState()\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [picMessage, setPicMessage] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate)\r\n    const { loading, error, success } = userUpdate\r\n\r\n    const history = useHistory\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.pushState(\"/\")\r\n        }else{\r\n            setName(userInfo.name)\r\n            setEmail(userInfo.email)\r\n            setPic(userInfo.pic)\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n    \r\n        dispatch(updateProfile({ name, email, password, pic }));\r\n      };\r\n\r\n   //updateFotos\r\n   const postDetails = (pics) =>{\r\n    if (!pics){\r\n        return setPicMessage(\"Please Select an Image\")\r\n    }\r\n     setPicMessage(null)\r\n\r\n     if(pics.type === 'image/jpeg' || pics.type === 'image/png'){\r\n         const data = new FormData()\r\n         data.append('file', pics)\r\n         data.append('upload_preset', 'notezipper')\r\n         data.append('cloud_name', 'exodiatec')\r\n         fetch(\"https://api.cloudinary.com/v1_1/exodiatec/image/upload\", {\r\n             method: \"post\",\r\n             body: data,\r\n         })\r\n         .then((res) => res.json())\r\n         .then((data) =>{\r\n             console.log(data)\r\n             setPic(data.url.toString())\r\n         })\r\n         .catch((err)=>{\r\n             console.log(err)\r\n         })\r\n     } else{\r\n         return setPicMessage(\"Please Select an Image\")\r\n     }\r\n}\r\n\r\n    return (\r\n        \r\n        <MainScreen title=\"EDIT PROFILE\">\r\n        <div>\r\n          <Row className=\"profileContainer\">\r\n            <Col md={6}>\r\n              <Form onSubmit={submitHandler}>\r\n                {loading && <Loading />}\r\n                {success && (\r\n                  <ErrorMessage variant=\"success\">\r\n                    Updated Successfully\r\n                  </ErrorMessage>\r\n                )}\r\n                {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n                <Form.Group controlId=\"name\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"confirmPassword\">\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>{\" \"}\r\n                {picMessage && (\r\n                  <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n                )}\r\n                <Form.Group controlId=\"pic\">\r\n                  <Form.Label>Change Profile Picture</Form.Label>\r\n                  <Form.File\r\n                    onChange={(e) => postDetails(e.target.files[0])}\r\n                    id=\"custom-file\"\r\n                    type=\"image/png\"\r\n                    label=\"Upload Profile Picture\"\r\n                    custom\r\n                  />\r\n                </Form.Group>\r\n                <Button type=\"submit\" varient=\"primary\">\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n            <Col\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <img src={pic} alt={name} className=\"profilePic\" />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </MainScreen>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import './App.css';\nimport Footer from './component/Footer/Footer';\nimport Header from './component/Header/Header';\nimport CreateNote from './screens/CreateNote/CreateNote';\nimport LandingPage from './screens/LandingPages/LandingPage';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport MyNotes from './screens/MyNotes/MyNotes';\nimport LoginScreen from './screens/LoginScreen/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen/RegisterScreen';\nimport SingleNote from './screens/SingleNote/SingleNote';\nimport {useState} from \"react\"\nimport ProfileScreen from './screens/profileScreen/ProfileScreen'\n\n\n\nfunction App() {\n\n  const [search, setSearch] = useState(\"\")\n\n  return (\n    <BrowserRouter>\n      <Header setSearch={setSearch}/>\n      <main>\n      <Route path='/' component={LandingPage} exact />\n      <Route path='/login' component={LoginScreen} exact />\n      <Route path='/register' component={RegisterScreen} exact />\n      <Route path='/createnote' component={CreateNote} exact />      \n      <Route path='/note/:id' component={SingleNote} exact />\n      <Route path='/mynotes' component={() =><MyNotes search={search}/>} />\n      <Route path='/profile' component={ProfileScreen} exact />\n      </main>\n      <Footer />\n\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from \"./reducers/userReducers\"\r\nimport { noteCreateReducer, noteDeleteReducer, noteListReducer, noteUpdateReducer } from \"./reducers/notesReducers\"\r\n\r\nconst reducer = combineReducers({\r\n    // This will contain our reducers\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userUpdate:userUpdateReducer,\r\n    noteList: noteListReducer,\r\n    noteCreate: noteCreateReducer,\r\n    noteUpdate: noteUpdateReducer, \r\n    noteDelete: noteDeleteReducer,\r\n    \r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n: null\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware =[thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;\r\n","import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS,\r\n     USER_LOGOUT, \r\n     USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\r\n     USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL  } from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading:true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading:true, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading:false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading:true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading:true, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading:false, error: action.payload }\r\n         default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading:true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading:false, userInfo: action.payload, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading:false, error: action.payload, success: false }\r\n         default:\r\n            return state;\r\n    }\r\n}","import { NOTE_LIST_FAIL, NOTE_LIST_REQUEST, NOTE_LIST_SUCCESS , \r\n         NOTE_CREATE_FAIL, NOTE_CREATE_REQUEST, NOTE_CREATE_SUCCESS,\r\n         NOTE_UPDATE_FAIL, NOTE_UPDATE_REQUEST, NOTE_UPDATE_SUCCESS,\r\n         NOTE_DELETE_FAIL, NOTE_DELETE_REQUEST, NOTE_DELETE_SUCCESS\r\n\r\n    } from \"../constants/noteConstants\";\r\n\r\nexport const noteListReducer = (state = { notes: [] }, action) =>{\r\n    switch (action.type) {\r\n        case NOTE_LIST_REQUEST:\r\n            return { loading: true }\r\n        case NOTE_LIST_SUCCESS:\r\n            return { loading: false, notes: action.payload }\r\n        case NOTE_LIST_FAIL:\r\n            return { loading: false, error: action.payload  }             \r\n             \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const noteCreateReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case NOTE_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case NOTE_CREATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case NOTE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload  }             \r\n             \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const noteUpdateReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case NOTE_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case NOTE_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case NOTE_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload, success: false }             \r\n             \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const noteDeleteReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case NOTE_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case NOTE_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case NOTE_DELETE_FAIL:\r\n            return { loading: false, error: action.payload, success: false }             \r\n             \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}> \n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}